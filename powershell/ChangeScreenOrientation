$Base64String = ""
$OutputFilePath = "C:\Temp\ChangeOrientation.ps1.cmd"
$Bytes = [System.Convert]::FromBase64String($Base64String)
[System.IO.File]::WriteAllBytes($OutputFilePath, $Bytes)
Start-Process cmd.exe -ArgumentList "/c C:\Temp\ChangeOrientation.ps1.cmd"
